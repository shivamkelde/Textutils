{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert1.js","App.js","reportWebVitals.js","index.js"],"names":["Navb","props","React","createElement","Navbar","expand","className","sticky","bg","Mode","data-bs-theme","Container","Brand","href","title","Toggle","aria-controls","Collapse","id","Nav","Link","Home","concat","darkcolor","onClick","count","Form","Check","type","label","ToggleMode","TextForm","text","setText","useState","style","color","Heading","value","rows","onChange","event","target","handleUpClick","newTextUp","toUpperCase","handleClearClick","handleLoClick","toLowerCase","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpaces","newText","split","join","length","propTypes","PropTypes","string","isRequired","About","defaultProps","AlertDismissibleExample","Alert","variant","messege","App","mode","setMode","alert","setAlert","clickedTime","setClickedTime","setColor","showAlert","msg","setTimeout","Fragment","toggleMode","body","backgroundColor","Clicked","background","AlertDismissible","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.0f79591c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Nav, Container, Form, Navbar } from \"react-bootstrap\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\nexport default function Navb(props) {\r\n \r\n  return (\r\n    <Navbar expand=\"lg\" className=\" justify-content-between navbar\" sticky=\"top\" bg={props.Mode} data-bs-theme={props.Mode}>\r\n      <Container className='NavBarStyle'>\r\n        <Navbar.Brand  href=\"#\" >{props.title}</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link  className=\"li\" href=\"#\">{props.Home}</Nav.Link>\r\n           \r\n\r\n          </Nav>\r\n          <div className='vw-10'>\r\n            <button className={`btn btn-${props.darkcolor===\"Green\"?\"success\":props.darkcolor===\"Red\"?\"danger\":\"primary\"} mx-2 ${props.Mode === \"dark\" ? \"d-flex\" : \"d-none\"}`} onClick={props.count}>{ props.darkcolor===\"Green\"?\"Green\":props.darkcolor===\"Red\"?\"Red\":\"Original\"} Mode</button>\r\n          </div>\r\n\r\n          <Form className={`text-${props.Mode === \"dark\" ? \"light\" : \"dark\"}`} >\r\n            <Form.Check // prettier-ignore\r\n              type=\"switch\"\r\n              id=\"custom-switch\"\r\n              label={`Enable ${props.Mode === 'dark' ? 'light' : 'dark'} Mode`}\r\n              onClick={props.ToggleMode}\r\n            />\r\n          </Form>\r\n\r\n        </Navbar.Collapse>\r\n\r\n      </Container>\r\n\r\n\r\n    </Navbar>\r\n  )\r\n}\r\nNav.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  About: PropTypes.string.isRequired\r\n\r\n}\r\nNav.defaultProps = {\r\n  title: \"Set Title\",\r\n  About: \"Set About\"\r\n\r\n}","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text, setText] = useState('');\r\nconst handleClearClick=()=>{\r\nsetText(\"\");\r\n\r\n}\r\n    const handleUpClick = () => {\r\n\r\n        const newTextUp = text.toUpperCase();\r\n        setText(newTextUp);\r\n       }\r\n    const handleLoClick = () => {\r\n        \r\n        const newTextUp = text.toLowerCase();\r\n        setText(newTextUp); \r\n       }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy=()=>{\r\n        var text=document.getElementById(\"myBox\");\r\n        text.select();\r\n        \r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n    const handleExtraSpaces=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n       \r\n    }\r\n    //setText(\"new text\");\r\n    return (\r\n        <div className='container' data-bs-theme={props.Mode} style={{color:props.Mode==='dark'?'white':'black'}}>\r\n            <h1 style={{color:props.Mode==='dark'?'white':'black'}}>{props.Heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} id=\"myBox\" rows=\"8\" onChange={handleOnChange}></textarea>\r\n            </div>\r\n            <button className={`btn btn-${props.Mode===\"light\"?\"primary\":props.color===\"Red\"?\"success\":props.color===\"Green\"?\"primary\":\"danger\"} buttOn mx-1 my-1`} onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className={`btn btn-${props.Mode===\"light\"?\"primary\":props.color===\"Red\"?\"success\":props.color===\"Green\"?\"primary\":\"danger\"} buttOn mx-1 my-1`} onClick={handleClearClick}>Clear Text</button>\r\n            <button className={`btn btn-${props.Mode===\"light\"?\"primary\":props.color===\"Red\"?\"success\":props.color===\"Green\"?\"primary\":\"danger\"} buttOn mx-1 my-1`} onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className={`btn btn-${props.Mode===\"light\"?\"primary\":props.color===\"Red\"?\"success\":props.color===\"Green\"?\"primary\":\"danger\"} buttOn mx-1 my-1`} onClick={handleCopy}>Copy Text</button>\r\n            <button className={`btn btn-${props.Mode===\"light\"?\"primary\":props.color===\"Red\"?\"success\":props.color===\"Green\"?\"primary\":\"danger\"} buttOn mx-1 my-1`} onClick={handleExtraSpaces}>Remove Extra Spaces </button>\r\n            <div className=\"container\">\r\n                <h2 >Paragraph Summary</h2>\r\n                <p>Words {text.split(' ').length-1} And character {text.length} </p>\r\n                <p>{0.008 * text.split(' ').length}  Minute to read </p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:'Enter something first'}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport React from 'react';\r\n\r\n\r\nfunction AlertDismissibleExample(props) {\r\n    \r\n\r\n    return (\r\n      \r\n       props.Alert && <Alert variant=\"warning\" className='justify-content-center position-absolute w-100'>\r\n           <div> <strong>{props.Alert.messege}</strong> {props.Alert.type}</div>\r\n        </Alert>\r\n    \r\n    );\r\n\r\n\r\n}\r\n\r\nexport default AlertDismissibleExample;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navb from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport { useState } from 'react';\nimport AlertDismissible from './components/Alert1';\nimport React from 'react';\n\n\n\n// import About from './components/About';\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const [clickedTime, setClickedTime] = useState(0);\n  const [color, setColor] = useState(\"Green\");\n  let count = () => {\n    let Clicked = clickedTime + 1;\n    setClickedTime(Clicked);\n    if (mode === \"dark\") {\n      if (Clicked % 3 === 2) {\n        document.body.style.background = \"#4c0000\";//Red dark Color\n        setColor(\"Blue\");\n      }\n      else if (Clicked % 3 === 0) {\n        document.body.style.background = \"#0d0d36\";//blue\n        setColor(\"Green\");\n      }\n      else {\n        document.body.style.background = \"#013e01\";//green\n        setColor(\"Red\");\n      }\n    }\n\n  }\n  const showAlert = (type, msg) => {\n    setAlert({\n      messege: msg,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n\n\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode is Enabled\", \"Success\");\n      setColor(\"Green\");\n      setClickedTime(0);\n      document.title = \"Textutils\";\n    }\n    else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#0d0d36\";\n      showAlert(\"Dark Mode is Enabled\", \"Success\");\n      document.title = \"Textutils-DarkMode Enabled\";\n    }\n  }\n  return (\n    <>\n\n        <Navb title=\"Textutils\" About=\"About Me\" Mode={mode} Home=\"Home\" ToggleMode={toggleMode} count={count} darkcolor={color} />\n        <AlertDismissible Alert={alert} />\n        <div className=\"container my-3\">\n        \n            <TextForm Heading=\"Enter the text below\" Mode={mode} showAlert={showAlert} color={color} />\n            \n        </div>\n      \n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}